{"version":3,"file":"static/js/4675.eab4cc0c.chunk.js","mappings":"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","sources":["views/orders/OrdersAdmin.js","views/widgets/WidgetsBrand.js","../node_modules/@coreui/icons/src/free/cil-cart.ts","../node_modules/@coreui/icons/src/free/cil-check.ts","../node_modules/@coreui/icons/src/free/cil-clock.ts","../node_modules/@coreui/icons/src/free/cil-truck.ts"],"sourcesContent":["/* eslint-disable */\n\nimport React, { useEffect, useState } from 'react'\n\nimport {\n  CCard,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport {\n  cibCcMastercard,\n  cibCcVisa,\n  cifBr,\n  cifUs,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport useAxios from 'src/network/useAxios'\nimport { useSelector } from 'react-redux'\nimport { userDetails } from 'src/redux/reducers/userDetails.reducer'\nimport { adminOrderActions, fetchAdminOrders, fetchAllOrdersAdmin } from 'src/urls/urls'\nimport { useRouter } from 'src/hooks/use-router'\n\nconst OrdersAdmin = () => {\n  const [fileResponse, error, loading, fetch] = useAxios();\n  const [responseAction, errorAction, loadingAction, fetchActionOrder] = useAxios();\n  const [responseDash, errorDash, loadingDash, fetchOrderDash] = useAxios();\n\n\n  const profile = useSelector(userDetails);\n  const [dashDetails, setDashDetails] = useState({\n\n  })\n  const router = useRouter();\n  useEffect(()=>{\n    if(profile.user_coins.length > 0 && profile.user_coins[0]?.coin < 100){\n      router.push('/amount/:topuprequired');\n    }\n  },[])\n  const [message, setMessage] = useState({\n    showMessage: false,\n    isError:\"\",\n    message:\"\"\n  });\n  const fetchAllOrders = () => {\n    fetch(fetchAdminOrders({ email: profile?.email }));\n  };\n  const fetchAllOrdersDash = (ation) => {\n    fetchOrderDash(fetchAllOrdersAdmin({ email: profile?.email}));\n  };\n\n\n  useEffect(()=>{\n    fetchAllOrdersDash()\n    fetchAllOrders()\n  },[])\n  useEffect(()=>{\n    if(fileResponse?.result == \"success\"){\n      setOrders(fileResponse?.data)\n    }\n\n  },[fileResponse])\n\n  useEffect(()=>{\n    if(responseAction?.result == \"success\"){\n      fetchAllOrders()\n      setMessage((prev)=>({...prev, \n        showMessage: true,\n        isError:false,\n        message:responseAction?.message\n      }))\n    }\n\n  },[responseAction])\n  useEffect(()=>{\n    if(responseDash?.result == \"success\"){\n      setDashDetails((prev)=>({...prev, \n        total_orders:responseDash?.data?.total_orders,\n        orders_last_Week:responseDash?.data?.orders_last_Week,\n        pending_orders:responseDash?.data?.pending_orders,\n        order_delivered:responseDash?.data?.order_delivered,\n      }))\n\n    }\n\n  },[responseDash])\n  const [orders, setOrders] = useState([]);\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n  const getTotalOrderPrice = (orders) => parseInt(orders.map(order => order.quantity * order.product_obj.quoted_price).reduce((acc, price) => acc + price, 0), 10);\n\n\n  function getStatus(status) {\n    switch (status.toLowerCase()) {\n      case \"pending\":\n        return 10;\n      case \"packed\":\n        return 40;\n      case \"shipped\":\n        return 70;\n      case \"delivered\":\n        return 100;\n      default:\n        return -1; // Indicate an unknown status\n    }\n  }\n\n  return (\n    <>\n\n      <WidgetsBrand withCharts data={dashDetails} />\n\n      <CRow>\n      <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    {/* <CTableHeaderCell></CTableHeaderCell> */}\n                    <CTableHeaderCell className=\"text-center\">\n                      Your Orders\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n\n{orders.map((obj)=><CTableRow>\n                  <CTableDataCell>\n                <CCard style={{marginTop:\"1rem\", padding:\"2rem\"}}>\n                <div style={{marginBottom:\"2rem\", display:\"flex\", justifyContent:\"space-between\"}}>\n                  <h3 style={{marginBottom:\"1rem\"}}>Order Id: #{obj.order_unique_id}</h3>\n                    <span>\n                    <strong>Ships to </strong><br/>\n                    {obj.customer_address}\n                    \n                    </span>\n\n                  </div>\n                  {obj?.order_id.map((item, index) => (\n                    <>\n                      <div>\n                        <div>{item.product_obj.product_name}</div>\n                        <div className=\"small text-medium-emphasis\">\n                          {/* <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '} */}\n              \n                          {new Date(item?.created_at).toLocaleString()}\n                        </div>\n                        <div className=\"small text-medium-emphasis\">\n                          {/* <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '} */}\n                          quantity {item?.quantity}\n                        </div>\n                      </div>\n                  \n                      <div style={{marginTop:\"1rem\"}}>\n                        \n                        <CProgress thin color={\"primary\"} value={getStatus(item.status)}/>\n                        <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\n                        <p>Placed</p>\n                          <p>Packed</p>\n                          <p>Shipped</p>\n                          <p>Delivered</p>\n\n                        </div>\n                        <div>\n                        <select id=\"status\" name=\"status\"  style={{marginBottom:\"2rem\"}} value={item.status} \n                        onChange={(e)=>\n                          fetchActionOrder(adminOrderActions({lineId:item.id, status:e.target.value}))\n                        }\n                        >\n                      <option value=\"pending\">Placed</option>\n                      <option value=\"packed\">Packed</option>\n                      <option value=\"shipped\">Shipped</option>\n                      <option value=\"delivered\">Deliver</option>\n                        </select>\n                        </div>\n                      </div>\n                    \n                      </>\n                  ))}\n\n                  <div style={{textAlign:\"end\"}}><strong>Total Amount: ${getTotalOrderPrice(obj?.order_id)}</strong></div>\n               \n                </CCard>\n                </CTableDataCell>\n                </CTableRow>)}\n               \n               \n\n                \n\n\n                </CTableBody>\n              </CTable>\n      </CRow>\n    </>\n  )\n}\n\nexport default OrdersAdmin\n","/* eslint-disable */\n\nimport React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilTruck, cilCalendar, cilCart, cilClock, cilCheck } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = ({ withCharts, data=false }) => {\n\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilCart} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'Total Orders', value: data?.total_orders }\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilClock} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'Pending Orders', value: data?.pending_orders }\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#00aced',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilCheck} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'Orders Last Week', value: data?.orders_last_Week }\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          color=\"warning\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [35, 23, 56, 22, 97, 23, 64],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilTruck} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'Delivered Orders', value:  data?.order_delivered  }\n          ]}\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","export var cilCart = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='160 96.039 160 128.039 464 128.039 464 191.384 428.5 304.039 149.932 304.039 109.932 16 16 16 16 48 82.068 48 122.068 336.039 451.968 336.039 496 196.306 496 96.039 160 96.039' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M176.984,368.344a64.073,64.073,0,0,0-64,64h0a64,64,0,0,0,128,0h0A64.072,64.072,0,0,0,176.984,368.344Zm0,96a32,32,0,1,1,32-32A32.038,32.038,0,0,1,176.984,464.344Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M400.984,368.344a64.073,64.073,0,0,0-64,64h0a64,64,0,0,0,128,0h0A64.072,64.072,0,0,0,400.984,368.344Zm0,96a32,32,0,1,1,32-32A32.038,32.038,0,0,1,400.984,464.344Z' class='ci-primary'/>\"];\n","export var cilCheck = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M199.066,456l-7.379-7.514-3.94-3.9-86.2-86.2.053-.055L17.936,274.665l97.614-97.613,83.565,83.565L398.388,61.344,496,158.958,296.729,358.229,285.469,369.6ZM146.6,358.183l52.459,52.46.1-.1.054.054,52.311-52.311,11.259-11.368L450.746,158.958,398.388,106.6,199.115,305.871,115.55,222.306,63.191,274.665l83.464,83.463Z' class='ci-primary'/>\"];\n","export var cilClock = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='271.514 95.5 239.514 95.5 239.514 273.611 355.127 328.559 368.864 299.657 271.514 253.389 271.514 95.5' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,16C123.452,16,16,123.452,16,256S123.452,496,256,496,496,388.548,496,256,388.548,16,256,16Zm0,448C141.125,464,48,370.875,48,256S141.125,48,256,48s208,93.125,208,208S370.875,464,256,464Z' class='ci-primary'/>\"];\n","export var cilTruck = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M441.885,141.649A32.028,32.028,0,0,0,415.669,128H336V80a32.036,32.036,0,0,0-32-32H48A32.036,32.036,0,0,0,16,80V408H69.082a67.982,67.982,0,0,0,133.836,0H309.082a67.982,67.982,0,0,0,133.836,0H496V226.522a23.882,23.882,0,0,0-4.338-13.763ZM47.98,80H304V256H48ZM136,432a36,36,0,1,1,36-36A36.04,36.04,0,0,1,136,432Zm240,0a36,36,0,1,1,36-36A36.04,36.04,0,0,1,376,432Zm88-56H440.994a68,68,0,0,0-129.988,0H200.994a68,68,0,0,0-129.988,0H48V288H464Zm0-120H336V160h79.669L464,229.044Z' class='ci-primary'/>\"];\n"],"names":["OrdersAdmin","fileResponse","error","loading","fetch","useAxios","responseAction","errorAction","loadingAction","fetchActionOrder","responseDash","errorDash","loadingDash","fetchOrderDash","profile","useSelector","userDetails","dashDetails","setDashDetails","useState","router","useRouter","useEffect","_profile$user_coins$","user_coins","length","coin","push","message","setMessage","showMessage","isError","fetchAllOrders","fetchAdminOrders","email","fetchAllOrdersAdmin","result","setOrders","data","prev","_responseDash$data","_responseDash$data2","_responseDash$data3","_responseDash$data4","total_orders","orders_last_Week","pending_orders","order_delivered","orders","getTotalOrderPrice","parseInt","map","order","quantity","product_obj","quoted_price","reduce","acc","price","getStatus","status","toLowerCase","_jsxs","_Fragment","children","_jsx","WidgetsBrand","withCharts","CRow","CTable","align","className","hover","responsive","CTableHead","color","CTableRow","CTableHeaderCell","CTableBody","obj","CTableDataCell","CCard","style","marginTop","padding","marginBottom","display","justifyContent","order_unique_id","customer_address","order_id","item","index","product_name","Date","created_at","toLocaleString","CProgress","thin","value","id","name","onChange","e","adminOrderActions","lineId","target","textAlign","_ref","chartOptions","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","maintainAspectRatio","plugins","legend","scales","x","y","CCol","sm","lg","CWidgetStatsD","chart","CChart","type","labels","datasets","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","fill","options","icon","CIcon","cilCart","height","values","title","cilClock","cilCheck","cilTruck"],"sourceRoot":""}