{"version":3,"file":"static/js/4353.e3c851ec.chunk.js","mappings":"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","sources":["views/products/ProductsAdmin.js"],"sourcesContent":["/* eslint-disable */\n\nimport React, { useEffect, useState } from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCardImage,\n  CCardText,\n  CCardTitle,\n  CCol,\n  CInputGroup,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CProgress,\n  CRow,\n\n} from '@coreui/react'\nimport { test_url } from 'src/config/environment';\n\nimport { Alert, Button, Drawer, Input, Radio, Space } from 'antd'\nimport ReactImg from 'src/assets/images/react.jpg'\n\nimport { userDetails } from 'src/redux/reducers/userDetails.reducer'\nimport { productStatusAdmin, productFetchProductsAdmin } from 'src/urls/urls'\nimport { useSelector } from 'react-redux'\nimport useAxios from 'src/network/useAxios'\nimport { useRouter } from 'src/hooks/use-router'\n\nconst ProductsAdmin = () => {\n  const profile = useSelector(userDetails);\n  const [modalVisible, setModalVisible] = useState(false);\n\n  //use axios\n  const [productsResponse, productsError, productsLoading, fetchProducts] = useAxios();\n  const [productPrice, productError, productLoading, submitProductPrice] = useAxios();\n\n\n  //useState\n  const [open, setOpen] = useState(false)\n  const [productsData, setProductsData] = useState([])\n  const [cartOrders, setCartOrders] = useState([]);\n  const router = useRouter();\n  const [form, setForm] = useState({})\n\n  //function\n  const showDrawer = () => {\n    setModalVisible(true)\n  }\n  const onClose = () => {\n    setModalVisible(false)\n  }\n  const fetchCustomerOrders = () => {\n    fetchProducts(productFetchProductsAdmin({ email:profile?.email }));\n  };\n  const submitPrice = () =>{\n    submitProductPrice(productStatusAdmin(form))\n  }\n  const [message, setMessage] = useState({\n    showMessage: false,\n    isError:\"\",\n    message:\"\"\n  });\n  \n  // const placeCart = (id, action) => {\n  //   placeCartResponse(adminOrderActions({ orderId:id, status: action}));\n  // };\n\n  //useEffect\n\n  useEffect(()=>{\n    if(profile?.email){\n      fetchCustomerOrders()\n    }\n  },[profile])\n  useEffect(()=>{\n    if(productsResponse?.result == \"success\" && productsResponse?.data){\n      setProductsData(productsResponse?.data)\n    }\n    },[productsResponse])\n  useEffect(()=>{\n    if(productPrice?.result == \"success\" ){\n      fetchCustomerOrders()\n      onClose()\n      setMessage((prev)=>({...prev,\n         message:productPrice?.message, \n         isError:false, \n         showMessage:true}));\n\n    \n    }\n    },[productPrice])\n\n\n  return (\n    <>\n     {message.showMessage && <Alert message={message?.message} closable type={message?.isError?\"error\":\"success\"} onClose={()=>setMessage((prev)=>({...prev, message:\"\", isError:false, showMessage:false}))\n} />}\n      <CCol xs>\n        <CCard className=\"mb-4\">\n          <CCardHeader>Products Insights</CCardHeader>\n          <CCardBody>\n            <CRow>\n              <CCol xs={12} md={12} xl={12}>\n                <CRow>\n                  <CCol sm={6}>\n                    <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                      <div className=\"text-medium-emphasis small\">Products Approved</div>\n                      <div className=\"fs-5 fw-semibold\">{productsResponse?.insights?.approved}</div>\n                    </div>\n                  </CCol>\n                  <CCol sm={6}>\n                    <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                      <div className=\"text-medium-emphasis small\">Products Pending</div>\n                      <div className=\"fs-5 fw-semibold\">{productsResponse?.insights?.pending}</div>\n                    </div>\n                  </CCol>\n                </CRow>\n              </CCol>\n\n              {/* <CCol xs={12} md={6} xl={6}>\n                <CRow>\n                  <CCol sm={6}>\n                    <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                      <div className=\"text-medium-emphasis small\">Pageviews</div>\n                      <div className=\"fs-5 fw-semibold\">78,623</div>\n                    </div>\n                  </CCol>\n                  <CCol sm={6}>\n                    <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                      <div className=\"text-medium-emphasis small\">Organic</div>\n                      <div className=\"fs-5 fw-semibold\">49,123</div>\n                    </div>\n                  </CCol>\n                </CRow>\n              </CCol> */}\n            </CRow>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CRow>\n      <CModal\n      backdrop=\"static\"\n      className='static-modal-down'\n      visible={modalVisible}\n      aria-labelledby=\"StaticBackdropExampleLabel\"\n    >\n      <CModalHeader>\n        <CModalTitle id=\"StaticBackdropExampleLabel\">\n         <h3> Add Price </h3>\n          </CModalTitle>\n      </CModalHeader>\n      <CModalBody style={{display:\"flex\", alignItems:\"center\"}}>\n             <span>$&nbsp;</span> <Input onChange={(e)=>{\n                            setForm((prev)=>({...prev, \n                              price : e.target.value\n                            }))\n             }}/>\n      </CModalBody>\n      <CModalFooter>\n<CButton color=''\nonClick={()=> onClose()}\n>\nReturn\n\n</CButton>\n<CButton color='primary'\nonClick={()=>submitPrice()}\n>\nSubmit\n\n</CButton>\n\n      </CModalFooter>\n    </CModal>\n{productsData.map((product) => (\n           <CCol xs={12} sm={6} lg={3} key={product.id}>\n           <CCard style={{ width: '18rem', marginTop: '1rem' }}>\n             <CCardImage orientation=\"top\" src={test_url.slice(0, -1)+product.photo_url} />\n             <CCardBody>\n               <CCardTitle>{product?.product_name}</CCardTitle>\n               <CCardText>\n               <span style={{color:product?.status==\"pending\"?\"red\":\"green\"}}> ({product?.status})</span><br></br>\n                {product?.description}\n               </CCardText>\n               (asked price)\n               <h3>${product?.asked_price}</h3>\n  \n               <div>\n               <CButton onClick={()=>{\n                 window.open(`${product?.product_drop_shipping_url}`, \"_blank\");\n               }\n              \n              } style={{marginRight:\"0.3rem\"}} >View Link</CButton>\n               <CButton onClick={()=>{\n                setForm({\n                  product:product.id\n                })\n                showDrawer()\n                \n                }} variant=\"outline\">Offered Price</CButton>\n               </div>\n             </CCardBody>\n           </CCard>\n         </CCol>\n        ))}\n      \n        \n      </CRow>\n      \n\n    </>\n  )\n}\n\nexport default ProductsAdmin\n"],"names":["ProductsAdmin","_productsResponse$ins","_productsResponse$ins2","profile","useSelector","userDetails","modalVisible","setModalVisible","useState","productsResponse","productsError","productsLoading","fetchProducts","useAxios","productPrice","productError","productLoading","submitProductPrice","open","setOpen","productsData","setProductsData","cartOrders","setCartOrders","form","setForm","useRouter","onClose","fetchCustomerOrders","productFetchProductsAdmin","email","message","setMessage","showMessage","isError","useEffect","result","data","prev","_jsxs","_Fragment","children","_jsx","Alert","closable","type","CCol","xs","CCard","className","CCardHeader","CCardBody","CRow","md","xl","sm","insights","approved","pending","CModal","backdrop","visible","CModalHeader","CModalTitle","id","CModalBody","style","display","alignItems","Input","onChange","e","price","target","value","CModalFooter","CButton","color","onClick","productStatusAdmin","map","product","lg","width","marginTop","CCardImage","orientation","src","test_url","slice","photo_url","CCardTitle","product_name","CCardText","status","description","asked_price","window","concat","product_drop_shipping_url","marginRight","variant"],"sourceRoot":""}