{"version":3,"file":"static/js/1005.9524a78a.chunk.js","mappings":"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","sources":["views/dashboard/DashboardAdmin.js","views/widgets/WidgetsDropdown.js","../node_modules/@coreui/icons/src/free/cil-options.ts","../node_modules/@coreui/utils/src/getStyle.ts"],"sourcesContent":["/* eslint-disable */\nimport React, { useEffect, useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n} from '@coreui/react'\nimport { CChartBar, CChartPie } from '@coreui/react-chartjs'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport useAxios from 'src/network/useAxios';\nimport { useSelector } from 'react-redux';\nimport { userDetails } from 'src/redux/reducers/userDetails.reducer';\nimport { dashboardFetchDetails } from 'src/urls/urls';\n\nconst Dashboard = () => {\n  const profile = useSelector(userDetails);\n  const refresh = localStorage.getItem('refresh');\n  useEffect(()=>{\n    if (refresh && refresh == 1){\n      localStorage.setItem('refresh', 2);\n      window.location.reload();\n    }\n  })\n  const [fileResponse, error, loading, fetch] = useAxios();\n  const fetchDashboardData = () => {\n    if(profile?.email) fetch(dashboardFetchDetails({ email: profile?.email }));\n  };\n    const [dashboardCounts, setDashboardCounts] = useState({\n    total_orders:false,\n    orderLastWeek: false,\n    pendingQuery: false,\n    pendingOrders: false,\n    orderDelivered: false,\n    graphOrders: false,\n    Insights:false\n  });\n  useEffect(() => {\n    fetchDashboardData();\n  }, [profile]);\n  useEffect(() => {\n    if (fileResponse?.result == 'success' && fileResponse?.data) {\n      setDashboardCounts((prev) => ({\n        ...prev,\n        total_orders: fileResponse?.data?.total_orders,\n        orderLastWeek: fileResponse?.data?.orderLastWeek,\n        pendingQuery: fileResponse?.data?.pendingQuery,\n        pendingOrders: fileResponse?.data?.pendingOrders,\n        orderDelivered: fileResponse?.data?.orderDelivered,\n        graphOrders: fileResponse?.data?.graphOrders,\n        Insights:fileResponse?.data?.Insights\n      }));\n    }\n  }, [fileResponse]);\n\n\n  const progressExample = [\n    { title: 'Total Amount', value: profile.user_coins.length > 0 ? profile.user_coins[0]?.coin : \"N/A\", percent: 40, color: 'success' },\n    { title: 'Last Transaction', value: dashboardCounts?.Insights?.last_transaction, percent: 20, color: 'info' },\n    { title: 'Last Topup', value: dashboardCounts?.Insights?.last_topup, percent: 60, color: 'warning' },\n    { title: 'Last Withdraw', value: dashboardCounts?.Insights?.last_withdraw, percent: 80, color: 'danger' },  ]\n\n\n  return (\n    <>\n      <WidgetsDropdown dashboardCounts={dashboardCounts}/>\n      {/* <Steps\n      style={{marginBottom:\"1rem\"}}\n    items={[\n      {\n        title: 'Login',\n        status: 'finish',\n        icon: <UserOutlined />,\n      },\n      {\n        title: 'Topup Amount',\n        status: 'process',\n        icon: <LoadingOutlined />,\n      },\n      {\n        title: 'List Products',\n        status: 'wait',\n        icon: <SmileOutlined />,\n      },\n      {\n        title: 'Place Order',\n        status: 'wait',\n        icon: <ShoppingCartOutlined />,\n      },\n    ]}\n  /> */}\n      <CCard className=\"mb-4\">\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 4 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  $ {item.value} \n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={100} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n\n      {/* <WidgetsBrand withCharts /> */}\n     \n      <CRow>\n      <CCol xs={8}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>Bar Chart</CCardHeader>\n          <CCardBody>\n            <CChartBar\n              data={{\n\n                labels: ['December','January', 'February', 'March', 'April', 'May', 'June'],\n                datasets: [\n                  {\n                    label: 'Orders Placed',\n                    backgroundColor: '#f87979',\n                    data: dashboardCounts?.graphOrders?.order_counts_list,\n                  },\n                ],\n              }}\n              labels=\"months\"\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={4}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>Pie Chart</CCardHeader>\n          <CCardBody>\n            <CChartPie\n              data={{\n                labels: ['Pending', 'Delivered'],\n                datasets: [\n                  {\n                    data: [dashboardCounts?.graphOrders?.order_counts_list_pending, dashboardCounts?.graphOrders?.order_counts_list_delivered],\n                    backgroundColor: ['#FF6384', '#36A2EB'],\n                    hoverBackgroundColor: ['#FF6384', '#36A2EB'],\n                  },\n                ],\n              }}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n","/* eslint-disable */\n\nimport React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = ({dashboardCounts=false}) => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n             {dashboardCounts?.total_orders}{' '}\n              {/* <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title=\"Total Orders\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n               {dashboardCounts?.pendingOrders}{' '}\n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Pending Orders\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n               {dashboardCounts?.orderLastWeek}{' '}\n              {/* <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Orders Last Week\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n               {dashboardCounts?.orderDelivered}{' '}\n              {/* <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title=\"Order Delivered\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","export var cilOptions = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M256,144a64,64,0,1,0-64-64A64.072,64.072,0,0,0,256,144Zm0-96a32,32,0,1,1-32,32A32.036,32.036,0,0,1,256,48Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,368a64,64,0,1,0,64,64A64.072,64.072,0,0,0,256,368Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,464Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,192a64,64,0,1,0,64,64A64.072,64.072,0,0,0,256,192Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,288Z' class='ci-primary'/>\"];\n","/**\n * --------------------------------------------------------------------------\n * CoreUI Utils (__COREUI_VERSION__): getStyle.ts\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst getStyle = (property: string, element?: Element) => {\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  if (typeof document === 'undefined') {\n    return\n  }\n\n  const _element = element ?? document.body\n\n  return window.getComputedStyle(_element, null).getPropertyValue(property).replace(/^\\s/, '')\n}\n\nexport default getStyle\n"],"names":["Dashboard","_profile$user_coins$","_dashboardCounts$Insi","_dashboardCounts$Insi2","_dashboardCounts$Insi3","_dashboardCounts$grap","_dashboardCounts$grap2","_dashboardCounts$grap3","profile","useSelector","userDetails","refresh","localStorage","getItem","useEffect","setItem","window","location","reload","fileResponse","error","loading","fetch","useAxios","dashboardCounts","setDashboardCounts","useState","total_orders","orderLastWeek","pendingQuery","pendingOrders","orderDelivered","graphOrders","Insights","email","dashboardFetchDetails","result","data","prev","_fileResponse$data","_fileResponse$data2","_fileResponse$data3","_fileResponse$data4","_fileResponse$data5","_fileResponse$data6","_fileResponse$data7","progressExample","title","value","user_coins","length","coin","percent","color","last_transaction","last_topup","last_withdraw","_jsxs","_Fragment","children","_jsx","WidgetsDropdown","CCard","className","CCardFooter","CRow","xs","cols","md","map","item","index","CCol","CProgress","thin","CCardHeader","CCardBody","CChartBar","labels","datasets","label","backgroundColor","order_counts_list","CChartPie","order_counts_list_pending","order_counts_list_delivered","hoverBackgroundColor","_ref","sm","lg","CWidgetStatsA","action","CDropdown","alignment","CDropdownToggle","caret","CIcon","icon","cilOptions","CDropdownMenu","CDropdownItem","disabled","chart","CChartLine","style","height","borderColor","pointBackgroundColor","getStyle","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","fill","barPercentage","drawTicks","property","element","document","_element","body","getComputedStyle","getPropertyValue","replace"],"sourceRoot":""}